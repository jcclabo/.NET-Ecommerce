@model OrderViewModel
@{
    ViewData["Title"] = "Cart";
}
<div class="container">
    <div class="row" v-if="order.Lines[0] == null">
        @*  empty cart  *@
        <div class="alert text-center pt-5 pb-5" role="alert" data-mdb-color="secondary">

            <h2 class="m-3">
                Your cart is empty
            </h2>

            <p class="mb-7 fs-6">
                Head to the home page to add items.
            </p>
            @*  cart icon *@
            <svg class="mb-9 bi bi-cart-x-fill" width="120" height="120" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">
                <path d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0m7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7.354 5.646 8.5 6.793l1.146-1.147a.5.5 0 0 1 .708.708L9.207 7.5l1.147 1.146a.5.5 0 0 1-.708.708L8.5 8.207 7.354 9.354a.5.5 0 1 1-.708-.708L7.793 7.5 6.646 6.354a.5.5 0 1 1 .708-.708" />
            </svg>

            <a href="/" class="d-block fs- text-center text-nowrap mb-5">
                <button type="button" class="btn btn-primary py-2 px-5"
                        onclick="">
                    Home
                </button>
            </a>

        </div>
    </div>
    <div v-else>
        @* cart is not empty -> display it *@

        <div class="col-lg-8 mb-4 mb-md-0">
            @*  Product list  *@
            <div class="mb-4" v-for="line in order.Lines" :key="line.ProductId">
                @*  Order Line  *@
                <div :id="line.ProductId" class="card rounded-6 p-2 py-0 pt-2 pt-sm-0">
                    @*  Phones: img above row  *@
                    <div class="d-xs-block d-sm-none">
                        <div class="bg-image ripple mb-4 d-block" data-ripple-color="light">
                            <img class="w-100" :src="line.ImgUrl" :alt="line.Name" />
                            <a>
                                <div class="hover-overlay">
                                    <div class="mask" style="background-color: hsla(0, 0%, 98.4%, 0.2)"></div>
                                </div>
                            </a>
                        </div>
                    </div>
                    @*  Non-Phone: img in row for order line  *@
                    <div class="row py-2">
                        <div class="col-sm-10 col-7 d-flex justify-content-start">
                            @*  img  *@
                            <div class="d-sm-inline-block d-none">
                                <div class="bg-image ripple rounded-5 d-block" data-ripple-color="light">
                                    <img style="width:200px" :src="line.ImgUrl" :alt="line.Name" />
                                    <a>
                                        <div class="hover-overlay">
                                            <div class="mask" style="background-color: hsla(0, 0%, 98.4%, 0.2)"></div>
                                        </div>
                                    </a>
                                </div>
                            </div>
                            @*  info beside  *@
                            <div class="d-sm-inline-block d-block d-flex justify-content-start">
                                <div class="ps-sm-4">
                                    <p class="fw-bold" v-text="line.Name"></p>
                                    <div class="d-block small">
                                        <p class="my-1 text-muted">
                                            <span v-text="toCurrency(line.UnitPrice)"></span> ea
                                        </p>
                                        <p class="mb-2">
                                            <span class="text-muted me-2" v-text="line.Descr"></span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*  Line Total col *@
                        <div class="col-sm-2 col-5">
                            <div class="d-flex justify-content-end me-2">
                                <p v-text="toCurrency(line.UnitPrice*line.Qty)"></p>
                            </div>
                            @*  Qty   *@
                            <div class="">
                                <div class="d-flex justify-content-end mb-3">
                                    <a class="me-2" v-on:click="shwQtyBtns=false" v-if="shwQtyBtns && shwQtyBtnsKey == line.ProductId">
                                        Hide
                                    </a>
                                    <a class="me-2" v-on:click="qtyEdit(line.ProductId)" v-else>
                                        Edit
                                    </a>
                                    <p class="me-2">
                                        <span class="me-1">Qty:</span><span v-text="line.Qty"></span>
                                    </p>
                                </div>
                                <div class="d-flex justify-content-end" v-if="shwQtyBtns && shwQtyBtnsKey == line.ProductId">
                                    <button class="btn btn-outline-danger text-nowrap rounded-3 border-1 me-5 p-1" v-if="!shwMinusBtnDark" 
                                            v-on:mouseover="shwMinusBtnDark = true">
                                        <b>- 1</b>
                                    </button>
                                    <button class="btn btn-danger text-nowrap rounded-3 border-1 me-5 p-2" v-on:click="qtyMinus(line.ProductId)" v-else
                                            v-on:mouseleave="shwMinusBtnDark = false">
                                        <b>- 1</b>
                                    </button>
                                    <button class="btn btn-outline-success text-nowrap rounded-3 border-1 p-1" v-if="!shwPlusBtnDark" 
                                            v-on:mouseover="shwPlusBtnDark = true">
                                        <b>+ 1</b>
                                    </button>
                                    <button class="btn btn-success text-nowrap rounded-3 border-1 p-2" v-on:click="qtyPlus(line.ProductId)" v-else
                                            v-on:mouseleave="shwPlusBtnDark = false">
                                        <b>+ 1</b>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @*  Order Line  *@
            </div>

            @*  Message  *@
            <div class="mb-5 pt-3">
                <p class="text-primary">
                    <i class="fas fa-info-circle mr-1"></i> Items are not reserved when they are in your cart
                </p>
            </div>
        </div>

        <div class="col-lg-4 mb-4 mb-md-0">
            @*  Summary  *@
            <div class="shadow-4 p-4 rounded-6 mb-4">
                <h5 class="mb-4"> Order Summary </h5>
                <div class="d-flex justify-content-between mb-3">
                    <span>Merchandise</span>
                    <span v-text="toCurrency(order.Subtotal)"></span>
                </div>
                <div class="d-flex justify-content-between">
                    <span>Estimated Shipping</span>
                    <span>Free</span>
                </div>
                <hr class="my-4" />
                <div class="d-flex justify-content-between fw-bold mb-5">
                    <span>Order Total </span>
                    <span v-text="toCurrency(order.Total)"></span>
                </div>
                <a href="/checkout">
                    <div class="btn btn-primary btn-rounded w-100">
                        Go to checkout
                    </div>
                </a>
            </div>
        </div>
    </div>

    <span id="jOrder" class="d-none" data-json='@Model.JsonOrder'></span>
</div>


@section Scripts {
    <script>

        var pageMixin = {
            data: function () {
                return {
                    order: null,
                    shwQtyBtns: false,
                    shwQtyBtnsKey: null,
                    shwMinusBtnDark: false,
                    shwPlusBtnDark: false
                }
            }, 
            methods: {
                qtyPlus: function (productId) {
                    $.ajax({
                        type: "POST",
                        url: "/cart/ajax-qty-plus",
                        dataType: "json",
                        data: { "productId": productId },
                        success: function (result) {
                            app.addToCartCount(1);
                            app.setOrderFromJson(result);
                        },
                        error: function (req, status, error) {
                            alert("error");
                            console.log(status);
                        }
                    });
                },
                qtyMinus: function (productId) {
                    $.ajax({
                        type: "POST",
                        url: "/cart/ajax-qty-minus",
                        dataType: "json",
                        data: { "productId": productId },
                        success: function (result) {
                            app.subtractFromCartCount(1);
                            app.setOrderFromJson(result); 
                        },
                        error: function (req, status, error) {
                            alert("error");
                            console.log(status);
                        }
                    });
                },
                setOrderFromJson: function (json) {
                    this.order = JSON.parse(json);
                },
                qtyEdit: function (key) {
                    app.shwQtyBtns = true;
                    app.shwQtyBtnsKey = key;
                }
            },
            created() {
                if($('#jOrder').attr('data-json') != "") {
                    this.order = JSON.parse($('#jOrder').attr('data-json'));
                }
            }
        };

        mixinArray.push(pageMixin);
    </script>
}